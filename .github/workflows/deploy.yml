name: Deploy to Plesk Server

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Build application
      run: npm run build
      
    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp -r dist/* deployment/
        cp package*.json deployment/
        cp ecosystem.config.js deployment/ 2>/dev/null || echo "No ecosystem config"
        cp .env.example deployment/
        cp docker-compose.yml deployment/ 2>/dev/null || echo "No docker-compose"
        cp Dockerfile deployment/ 2>/dev/null || echo "No Dockerfile"
        tar -czf deployment.tar.gz deployment/
        
    - name: Deploy to Plesk
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PLESK_HOST }}
        username: ${{ secrets.PLESK_USERNAME }}
        key: ${{ secrets.PLESK_SSH_KEY }}
        port: ${{ secrets.PLESK_PORT }}
        script: |
          # Create backup of current deployment
          if [ -d "/var/www/vhosts/${{ secrets.PLESK_DOMAIN }}/httpdocs" ]; then
            cp -r /var/www/vhosts/${{ secrets.PLESK_DOMAIN }}/httpdocs /var/www/vhosts/${{ secrets.PLESK_DOMAIN }}/httpdocs.backup.$(date +%Y%m%d_%H%M%S)
          fi
          
          # Stop the application if running
          if pm2 list | grep -q "panchakarma-api"; then
            pm2 stop panchakarma-api
          fi
          
          # Clean up old deployment
          rm -rf /var/www/vhosts/${{ secrets.PLESK_DOMAIN }}/httpdocs/*
          
          # Extract new deployment
          tar -xzf deployment.tar.gz
          cp -r deployment/* /var/www/vhosts/${{ secrets.PLESK_DOMAIN }}/httpdocs/
          
          # Set proper permissions
          chown -R psaserv:psaserv /var/www/vhosts/${{ secrets.PLESK_DOMAIN }}/httpdocs/
          chmod -R 755 /var/www/vhosts/${{ secrets.PLESK_DOMAIN }}/httpdocs/
          
          # Install production dependencies
          cd /var/www/vhosts/${{ secrets.PLESK_DOMAIN }}/httpdocs
          npm ci --only=production
          
          # Start the application
          pm2 start ecosystem.config.js --env production || pm2 start dist/index.js --name panchakarma-api
          
          # Save PM2 configuration
          pm2 save
          
          # Clean up
          rm -f deployment.tar.gz
          rm -rf deployment
          
    - name: Health check
      run: |
        sleep 10
        curl -f ${{ secrets.PLESK_DOMAIN }}/health || exit 1 